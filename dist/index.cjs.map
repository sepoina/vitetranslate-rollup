{"version":3,"file":"index.cjs","sources":["../src/dev/babel/getChildrenText.js","../src/dev/babel/getVariableProps.js","../../../node_modules/fnv1a/index.js","../src/dev/babel/babelTranslate.js","../src/dev/isProduction.js","../src/dev/rollup/rollupTranslate.js"],"sourcesContent":["//\n// restituisce il testo di un children\n// o false se non è un testo recuperabile\n//\nexport default function getChildrenText(p) {\n  // console.log('Carico dai children:', p);\n  if (p?.container?.children?.length === 1) {\n    const child = p.container.children[0];\n    // se è un testo ok\n    if (child.type === \"JSXText\") return child.value;\n    // se è un calcolo ok se calcolabile subito\n    else if (\n      child.type === \"JSXExpressionContainer\" &&\n      child?.expression?.value\n    )\n      return child.expression.value;\n    else return false;\n  }\n  // altrimenti è un errore\n  return false;\n}\n","//\n// prende la variabile 'variableName' se esiste tra i props o torna false\nexport default function getVariableProps(variableName, p) {\n  // console.log('Carico dalle variabili in linea:', p);\n  const node = p.node.attributes.find(\n    node => node?.name?.name === variableName\n  );\n  if (!node) return false;\n  // ok è una stringa\n  if (node?.value?.type === \"StringLiteral\") return node.value.value;\n  // o è calcolabile come stringa\n  if (\n    node?.value?.type === \"JSXExpressionContainer\" &&\n    node?.value?.expression?.type === \"StringLiteral\"\n  )\n    return node.value.expression.value;\n  return false;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n * More info: https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV_hash_parameters\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @param [h] {number} FNV-1a hash generation init value.\n * @returns {number} The result integer hash.\n */\nfunction hash(s, h = hash.BASE) {\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        h ^= s.charCodeAt(i);\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n    }\n    return h >>> 0;\n}\nexports.default = hash;\nmodule.exports = hash;\n","import getChildrenText from \"./getChildrenText\";\nimport getVariableProps from \"./getVariableProps\";\nimport pathCmd from \"path\";\nimport hash from \"fnv1a\";\n// import isProduction from \"../isProduction\";\n\n\n//\n// se in input trova un _%_testo_%_\n// aggiunge \"testo\" alla tabella di traduzioni\n// e trasforma \"_%_testo_%_\" in \"_<_id_#_testo_>_\"\n//\nfunction ifStaticAddTable(p, state) {\n  // console.log(\"status:\",import.meta.env);\n  if (!p?.node?.value) return; // non trova l'oggetto\n  if (!/_%_(.*?)_%_/.test(p.node.value)) return; // non trova il riconoscitore\n  const strToAdd = /_%_(.*?)_%_/.exec(p.node.value)?.[1];\n  //  console.log(\"trovato da rimpiazzare:\", p.node.value);\n  const data_translate = addToTable(strToAdd, state);\n  p.node.value = getReplacedForTranslate(\n    p.node.value,\n    data_translate,\n    strToAdd\n  );\n  if (p.node.extra.rawValue)\n    p.node.extra.rawValue = getReplacedForTranslate(\n      p.node.extra.rawValue,\n      data_translate,\n      strToAdd\n    );\n  if (p.node.extra.raw)\n    p.node.extra.raw = getReplacedForTranslate(\n      p.node.extra.raw,\n      data_translate,\n      strToAdd\n    );\n  // console.log(\"rimpiazzo:\", p.node.value);\n}\n\n// getta il testo da value e trasforma \"_%_testo_%_\" in \"_<_id_/_testo_>_\"\nfunction getReplacedForTranslate(value, data_translate, text) {\n  const newString = `_<_${data_translate}_/_${text}_>_`;\n  return value.replace(/_%_(.*?)_%_/, newString);\n}\n\n// aggiunge alla tabella temporanea\nfunction addToTable(strToAdd, state) {\n  //\n  //\n  // recupera il nome del file su cui si trova il translate\n  const nameFile = pathCmd.parse(state.filename).name;\n  //\n  //\n  // calcola l'hash\n  const hex = hash(strToAdd).toString(36);\n  //\n  // va iniettato\n  // console.log(path);\n  const data_translate = `${nameFile}_${hex}`;\n  // console.log(`add to table:${data_translate} value:${strToAdd}`);\n  // assegna\n  globalThis[\"TranslateService\"][\"baseLng\"][data_translate] = strToAdd;\n  return data_translate; // id\n}\n\n\nexport default api => {\n  const { types: t } = api;\n\n  return {\n    visitor: {\n      // Aggiungi il tuo visitor per le stringhe costanti\n      StringLiteral: ifStaticAddTable,\n      JSXText: ifStaticAddTable,\n      TemplateElement: ifStaticAddTable,\n      JSXOpeningElement(p, state) {\n        //\n        // prova ad aprirlo... è translate? se no torna\n        if (p.node.name.name !== \"Translate\") return;\n        //\n        // ha giù la props data-translate? torna\n        const existingProp = p.node.attributes.find(\n          node => node?.name?.name === \"data-translate\"\n        );\n        if (existingProp) return;\n        //\n        // se contiene c come props la traduzione è differita, ritorna\n        //\n        if (p.node.attributes.find(n => n?.name.name === \"c\")) return;\n        //\n        // se ha un props chiamato 't' lo carica altrimenti carica il contenuto\n        // dei children, se nessuno dei due ha un text mostra un errore\n        const textInternal = p.node.attributes.find(\n          node => node?.name?.name === \"t\"\n        );\n        const text = textInternal\n          ? getVariableProps(\"t\", p)\n          : getChildrenText(p);\n        if (text === false)\n          throw \"Error, Translate require constant string\";\n        //\n        // aggiunge alla tabella\n        const data_translate = addToTable(text, state);\n        const newProp = t.jSXAttribute(\n          t.jSXIdentifier(\"data-translate\"),\n          t.stringLiteral(data_translate)\n        );\n        p.node.attributes.push(newProp);\n      },\n    },\n  };\n};\n","export default function isProduction() {\n    return process.env.NODE_ENV==='production';\n}","import fs from \"fs\";\nimport isProduction from \"../isProduction\";\nimport pathCmd from 'path';\n\nexport default function rollupTranslate(defs) {\n  return {\n    name: \"onRollupTranslate\",\n    buildStart: {\n      sequential: true,\n      order: \"pre\",\n      handler: () => {\n        //\n        // la public dir è di solito {workspace}/public\n        //\n        globalThis[\"TranslateService\"] = defs;\n        globalThis[\"TranslateService\"].baseLng = {\n          __lngVersion__: CalcolaVersion(),\n        }; // spazio vuoto per gli elementi\n        if (!isProduction()) console.log(\"\\n::: Vite-Translate: Start translate service in development mode, not update translation table file, make a new build for this\\n\");\n      },\n    },\n    buildEnd: {\n      sequential: true,\n      order: \"post\",\n      handler: () => {\n        if (isProduction()) updateFileLanguage();\n      },\n    },\n  };\n}\n\n/**\n * Aggiorna un file di lingua JSON con dati di traduzione. Se il file non esiste, crea un nuovo file\n * utilizzando i dati di traduzione di base forniti. La funzione confronta e aggiorna i dati presenti\n * nel file con i nuovi dati di traduzione, salvando le modifiche solo se sono state apportate variazioni.\n *\n * @function\n * @returns {void}\n *\n * @description\n * Questa funzione legge il contenuto di un file JSON di lingua e lo confronta con i dati di traduzione\n * di base forniti. Se il file non esiste, viene creato utilizzando i dati di traduzione di base. Se ci\n * sono variazioni nei dati di traduzione, le modifiche vengono salvate nel file. La funzione fornisce\n * messaggi di log dettagliati durante il processo.\n *\n */\nfunction updateFileLanguage() {\n  // Specifica il percorso del tuo file JSON\n  // pathCmd.join(__dirname, 'public', 'locale', PredefinedLanguage)\n  /* \n  \n  Format  globalThis[\"TranslateService\"]\n  {  \n      PredefinedLanguage:'it.json',     // predefined file usual 'xx.json' where xx iso 639-1 -> is https://en.wikipedia.org/wiki/ISO_639-1\n      baseDir:__dirname,                // workspace dir, contain src, public and dist folder\n      publicTableDir: ['public','locale'],  // source public file before rollup usual {workspace}/public/locale/PredefinedLanguage.json\n      distTableDir: ['dist','locale'],      // distribution file after rollup usual {workspace}/dist/locale/PredefinedLanguage.json\n  }\n  \n  */\n\n  const filePath = pathCmd.join(globalThis[\"TranslateService\"].baseDir, ...globalThis[\"TranslateService\"].publicTableDir, globalThis[\"TranslateService\"].PredefinedLanguage);\n  const distPath = pathCmd.join(globalThis[\"TranslateService\"].baseDir, ...globalThis[\"TranslateService\"].distTableDir, globalThis[\"TranslateService\"].PredefinedLanguage);\n  const shortFilePath = pathCmd.join(...globalThis[\"TranslateService\"].publicTableDir, globalThis[\"TranslateService\"].PredefinedLanguage);\n  const shortDistPath = pathCmd.join(...globalThis[\"TranslateService\"].distTableDir, globalThis[\"TranslateService\"].PredefinedLanguage);\n\n  console.log(\"| Vite-Translate ---------------------------------------------\");\n  console.log(\"| Load base translation table from \", shortFilePath);\n  try {\n    fs.readFile(filePath, \"utf8\", (err, data) => {\n      let state = { newest: true, changed: true },\n        baseData = null;\n      if (err) {\n        console.log(`| The file ${shortFilePath} not exist, i make new one.`);\n        baseData = globalThis[\"TranslateService\"].baseLng; // questi i dati\n      } else {\n        baseData = JSON.parse(data);\n        const newData = globalThis[\"TranslateService\"].baseLng;\n        state = decade(baseData, newData); // se ci sono variazioni\n      }\n      if (state.changed) {\n        // sono avvenute variazioni, salva\n        console.log(state.newest\n          ? \"| Create new file.\"\n          : `| Update: (${state.added} added, ${state.deleted} removed)`);\n        fs.writeFile(\n          filePath,\n          JSON.stringify(baseData, null, 2),\n          \"utf8\",\n          err => {\n            if (err) {\n              console.error(`| Error writing over ${shortFilePath}`, err);\n            } else {\n              console.log(`| Correct writing operation ${shortFilePath}`);\n              fs.copyFile(filePath, distPath, err => {\n                if (!err) console.log(`| Correct copy to ${shortDistPath}`);\n                console.log(\n                  \"| ------------------------------------------------------------\"\n                );\n              });\n            }\n          }\n        );\n      } else {\n        console.log(\"| Nothing change.\");\n        console.log(\n          \"| ------------------------------------------------------------\"\n        );\n      }\n    });\n  } catch (error) {\n    console.error(`| Error in ${filePath}, erase this file and restart build.`, error);\n    return;\n  }\n}\n\n/**\n * Funzione per confrontare due oggetti e apportare modifiche.\n *\n * @param {Object} a - Primo oggetto da confrontare e modificare.\n * @param {Object} b - Secondo oggetto per il confronto.\n * @returns {boolean} Restituisce true se ci sono state modifiche, altrimenti false.\n *\n * @example\n * const oggettoA = { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\" };\n * const oggettoB = { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\", \"NuovaChiave\": \"NuovoValore\" };\n * const ciSonoVariazioni = decade(oggettoA, oggettoB);\n * console.log(oggettoA); // { \"App_f9xds4\": \"rob\", \"App_y3mo81\": \"Santanastaso\", \"NuovaChiave\": \"NuovoValore\" }\n * console.log('Ci sono variazioni:', ciSonoVariazioni); // Ci sono variazioni: true\n */\nfunction decade(a, b) {\n  const stats = { changed: false, deleted: 0, added: 0 };\n  // Rimuovi le chiavi da 'a' che non sono presenti in 'b'\n  for (const keyA in a) {\n    if (!(keyA in b)) {\n      delete a[keyA];\n      stats.changed = true;\n      stats.deleted += 1;\n    }\n  }\n  // Aggiungi le chiavi da 'b' che non sono presenti in 'a'\n  for (const keyB in b) {\n    if (!(keyB in a)) {\n      a[keyB] = b[keyB];\n      stats.changed = true;\n      stats.added += 1;\n    }\n  }\n  if (stats.changed) a[\"__lngVersion__\"] = b[\"__lngVersion__\"]; // riporta in a la versione corrente\n  return stats;\n}\n\nfunction CalcolaVersion() {\n  return Date.now();\n}\n"],"names":["getChildrenText","p","_b","_a","child","_c","getVariableProps","variableName","node","_d","exports","hash","s","h","l","i","module","ifStaticAddTable","state","strToAdd","data_translate","addToTable","getReplacedForTranslate","value","text","newString","nameFile","pathCmd","hex","babelTranslate","api","t","n","newProp","isProduction","rollupTranslate","defs","CalcolaVersion","updateFileLanguage","filePath","distPath","shortFilePath","shortDistPath","fs","err","data","baseData","newData","decade","error","a","b","stats","keyA","keyB"],"mappings":"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","x_google_ignoreList":[2]}